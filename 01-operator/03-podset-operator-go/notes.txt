https://medium.com/faun/writing-your-first-kubernetes-operator-8f3df4453234

https://developers.redhat.com/blog/2019/10/04/getting-started-with-golang-operators-by-using-operator-sdk/

https://github.com/operator-framework/getting-started

Creating a New Project
https://golang.github.io/dep/docs/new-project.html

https://github.com/golang/go/wiki/SettingGOPATH

operator-sdk new podset-gan-operator

http://noelyahan.blogspot.com/2018/02/mystery-of-gopath.html

go env

https://golang.github.io/dep/docs/installation.html

----------------------
https://github.com/xcoulon/podset-operator/blob/master/pkg/controller/podset/podset_controller.go#L86
https://github.com/xcoulon/podset-operator
--------------------------------------------------------------------------------------------------------------------------
$ brew install operator-sdk
$ brew install dep
$ brew upgrade dep

export GOPATH=/Users/jeyagandhi/Gandhi/Projects/Apps/sample-apps/01-operator/03-podset-operator-go
mkdir $GOPATH/src
cd $GOPATH/src
operator-sdk new podset-operator
cd podset-operator

# Add a new API for the custom resource PodSet
$ operator-sdk add api --api-version=app.example.com/v1alpha1 --kind=PodSet

# Add a new controller that watches for PodSet
$ operator-sdk add controller --api-version=app.example.com/v1alpha1 --kind=PodSet

add the below entry into podset_controller.go
/pkg/apis/app/v1alpha1/podset_types.go
type PodSetSpec struct {
  Replicas int32 `json:"replicas"`
}type PodSetStatus struct {
  PodNames []string `json:"podNames"`
}

operator-sdk generate k8s
$ operator-sdk generate crds

# build the Docker image using the Operator SDK
$ operator-sdk build gandhicloud/podset-operator

# push the image to Quay.io
$ docker push gandhicloud/podset-operator

# On Linux:
$ sed -i 's|REPLACE_IMAGE|gandhicloud/podset-operator|g' deploy/operator.yaml


oc new-project gan-podset-operator

# Setup Service Account
$ oc create -f deploy/service_account.yaml

# Setup RBAC
$ oc create -f deploy/role.yaml
$ oc create -f deploy/role_binding.yaml

# Setup the CRD
$ oc create -f deploy/crds/app.example.com_podsets_crd.yaml
$ oc apply -f deploy/crds/app.example.com_podsets_crd.yaml

# Deploy the podset-operator
$ oc create -f deploy/operator.yaml
oc apply -f deploy/operator.yaml

# check the CRD
$ oc get crd podsets.app.example.com
NAME                      
podsets.app.example.com   

# check the operator controller
$ oc get pods
NAME                               READY     STATUS   
podset-operator-685bbbc858-d4gf7   1/1       Running   

# check if there's a CR using the CRD fullname...
$ oc get podsets.app.example.com
No resources found.# ... or one of its aliases

$ oc get podsets
No resources found.

$ echo "apiVersion: app.example.com/v1alpha1
kind: PodSet
metadata:
  name: example-podset
spec:
  replicas: 3" | oc create -f -

And now, we can check the pods in the namespace:
Jeyas-MacBook-Pro:podset-operator jeyagandhi$ oc get pods -l app=example-podset
NAME                 READY   STATUS    RESTARTS   AGE
example-podset-pod   1/1     Running   0          26s



oc describe podset/example-podset


operator-sdk generate csv --csv-version 0.0.1 --update-crds
operator-sdk generate csv --update-crds

------------------------------------------------------------------------
https://redhat-connect.gitbook.io/certified-operator-guide/ocp-deployment/operator-metadata/creating-the-csv
https://redhat-connect.gitbook.io/certified-operator-guide/ocp-deployment/openshift-deployment


https://github.com/operator-framework/community-operators/blob/master/docs/testing-operators.md

good
https://docs.openshift.com/container-platform/4.1/applications/operator_sdk/osdk-generating-csvs.html

https://github.com/operator-framework/operator-courier

pip3 install operator-courier

git clone https://github.com/operator-framework/operator-marketplace.git
git clone https://github.com/operator-framework/operator-courier.git
git clone https://github.com/operator-framework/operator-lifecycle-manager.git

ls -l
total 184
drwxr-x---   5 jeyagandhi  staff    160 Feb 16 06:23 build
drwxr-x---   3 jeyagandhi  staff     96 Feb 16 05:51 cmd
drwxr-x---   7 jeyagandhi  staff    224 Feb 16 05:55 deploy
-rw-r--r--   1 jeyagandhi  staff   1998 Feb 16 05:52 go.mod
-rw-r--r--   1 jeyagandhi  staff  84300 Feb 16 05:52 go.sum
drwxr-xr-x  20 jeyagandhi  staff    640 Feb 16 08:00 operator-courier
drwxr-xr-x  36 jeyagandhi  staff   1152 Feb 16 08:00 operator-lifecycle-manager
drwxr-xr-x  25 jeyagandhi  staff    800 Feb 16 07:59 operator-marketplace
drwxr-x---   4 jeyagandhi  staff    128 Feb 16 05:51 pkg
drwxr-xr-x   2 jeyagandhi  staff     64 Feb 16 07:58 podset-operator-bundle
-rw-r--r--   1 jeyagandhi  staff    149 Feb 16 05:51 tools.go
drwxr-x---   3 jeyagandhi  staff     96 Feb 16 05:51 version


pip3 install operator-courier

https://github.com/operator-framework/operator-sdk/blob/master/doc/design/milestone-0.2.0/csv-generation.md

operator-sdk olm-catalog gen-csv --csv-version 0.0.1 --update-crds


jenkinss....
https://github.com/operator-framework/community-operators/blob/master/community-operators/jenkins-operator/0.2.2/jenkins-operator.v0.2.2.clusterserviceversion.yaml
https://github.com/redhat-developer/jenkins-operator

https://github.com/operator-framework/community-operators/blob/master/docs/contributing.md
If you are using Operator-SDK to generate the files the bundle directory my-operator-bundle/ will be like my-operator/deploy/olm-catalog/my-operator/

operator-courier verify --ui_validate_io deploy/olm-catalog/podset-operator/

If there is no output, the bundle passed operator-courier validation

docker login quay.io
export QUAY_TOKEN="basic A1/QCZznB7LB0dET/jmEDPSlHG1SjyERv/cLF9kSKUAD9YzoiOVPqNe0gSEavaBV"

export QUAY_USERNAME=gandhicloudquay
export QUAY_PASSWORD=A1YzoiOVPqNe0gSEavaBV

QUAY_TOKEN=$(curl -sH "Content-Type: application/json" -XPOST https://quay.io/cnr/api/v1/users/login -d '
{
    "user": {
        "username": "'"${QUAY_USERNAME}"'",
        "password": "'"${QUAY_PASSWORD}"'"
    }
}' | jq -r '.token')

export OPERATOR_DIR=deploy/olm-catalog/podset-operator/
export QUAY_NAMESPACE=gandhicloudquay
export PACKAGE_NAME=podset-operator
export PACKAGE_VERSION=0.0.1
export TOKEN=$QUAY_TOKEN


Need to delete this application in Quay.io, if you want to re push...without chanding versions/revisions
operator-courier push "$OPERATOR_DIR" "$QUAY_NAMESPACE" "$PACKAGE_NAME" "$PACKAGE_VERSION" "$TOKEN"

available in ....

https://quay.io/application/gandhicloudquay/podset-operator

make the application as public in the quay.io.


oc apply -f operator-source.yaml

oc delete -f operator-source.yaml

oc get operatorsource podset-operator -n openshift-marketplace

oc new-project g-operators




echo "apiVersion: app.example.com/v1alpha1
kind: PodSet
metadata:
  name: example-podset
spec:
  replicas: 3" | oc create -f -


------------------------------------------------------------------------
Bash

Edit your ~/.bash_profile to add the following line:

export GOPATH=$HOME/go

Save and exit your editor. Then, source your ~/.bash_profile.

source ~/.bash_profile
--------